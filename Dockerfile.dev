# Stage 1: Build dependencies with esbuild
FROM node:20-alpine AS builder
RUN apk --no-cache add curl bash build-base python3 make g++ vips-dev  # Đảm bảo cài bash
WORKDIR /app
COPY package.json package-lock.json ./
COPY api/package.json api/
COPY client/package.json client/
COPY packages/data-provider/package.json packages/data-provider/
COPY packages/mcp/package.json packages/mcp/
RUN npm config set fetch-retry-maxtimeout 600000 && \
    npm config set fetch-retries 5 && \
    npm config set fetch-retry-mintimeout 15000 && \
    npm ci
COPY . .
RUN mkdir -p /app/client/public/images /app/api/logs && \
    chown node:node /app /app/client /app/api /app/client/public/images /app/api/logs

# Stage 2: Runtime with esbuild binary
FROM node:20-alpine AS runtime
WORKDIR /app
COPY --from=builder /app/package.json /app/package-lock.json ./
COPY --from=builder /app/api /app/api
COPY --from=builder /app/client /app/client
COPY --from=builder /app/packages /app/packages
COPY --from=builder /app/node_modules /app/node_modules
# Cài esbuild binary phù hợp với Alpine
RUN npm install esbuild@0.21.5
USER node
EXPOSE 3080 5173
CMD ["sh", "-c", "cd /app/api && npm run backend:dev"]